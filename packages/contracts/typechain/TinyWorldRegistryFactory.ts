/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { TinyWorldRegistry } from "./TinyWorldRegistry";

export class TinyWorldRegistryFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<TinyWorldRegistry> {
    return super.deploy(overrides || {}) as Promise<TinyWorldRegistry>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TinyWorldRegistry {
    return super.attach(address) as TinyWorldRegistry;
  }
  connect(signer: Signer): TinyWorldRegistryFactory {
    return super.connect(signer) as TinyWorldRegistryFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TinyWorldRegistry {
    return new Contract(address, _abi, signerOrProvider) as TinyWorldRegistry;
  }
}

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "realAddresses",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "proxyAddress",
        type: "address",
      },
    ],
    name: "dummySetProxyAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getPlayerInfos",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_realAddress",
        type: "address",
      },
    ],
    name: "getProxyAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_proxyAddress",
        type: "address",
      },
    ],
    name: "getRealAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "proxyAddressToRealAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "realAddressToProxyAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_proxyAddress",
        type: "address",
      },
    ],
    name: "setProxyAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600080546001600160a01b03191633179055610803806100326000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c806349fe72ed1161005b57806349fe72ed146100f05780635d7a59181461011c5780639a2a966614610145578063fa2a5b011461015b57600080fd5b806308fc5d8714610082578063204b08ba146100c857806346a7dadc146100dd575b600080fd5b6100ab610090366004610625565b6003602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100db6100d6366004610646565b610187565b005b6100db6100eb366004610625565b610320565b6100ab6100fe366004610625565b6001600160a01b039081166000908152600360205260409020541690565b6100ab61012a366004610625565b6002602052600090815260409020546001600160a01b031681565b61014d61045d565b6040516100bf929190610762565b6100ab610169366004610625565b6001600160a01b039081166000908152600260205260409020541690565b60005b825181101561031b5760008382815181106101b557634e487b7160e01b600052603260045260246000fd5b6020908102919091018101516001600160a01b0380821660009081526002909352604090922054909250161561022e5760405162461bcd60e51b8152602060048201526019602482015278141c9bde1e481859191c995cdcc8185b1c9958591e481cd95d603a1b60448201526064015b60405180910390fd5b6001600160a01b0383811660009081526003602052604090205416156102915760405162461bcd60e51b81526020600482015260186024820152771499585b081859191c995cdcc8185b1c9958591e481cd95d60421b6044820152606401610225565b6001600160a01b03908116600081815260026020908152604080832080549588166001600160a01b03199687168117909155835260039091528120805484168317905560018054808201825591527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180549092161790558061031381610790565b91505061018a565b505050565b336000908152600260205260409020546001600160a01b0316156103825760405162461bcd60e51b8152602060048201526019602482015278141c9bde1e481859191c995cdcc8185b1c9958591e481cd95d603a1b6044820152606401610225565b6001600160a01b0381811660009081526003602052604090205416156103e55760405162461bcd60e51b81526020600482015260186024820152771499585b081859191c995cdcc8185b1c9958591e481cd95d60421b6044820152606401610225565b33600081815260026020908152604080832080546001600160a01b039096166001600160a01b03199687168117909155835260039091528120805484168317905560018054808201825591527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6018054909216179055565b606080600060018054905067ffffffffffffffff81111561048e57634e487b7160e01b600052604160045260246000fd5b6040519080825280602002602001820160405280156104b7578160200160208202803683370190505b5060015490915060009067ffffffffffffffff8111156104e757634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610510578160200160208202803683370190505b50905060005b6001548110156106005760006001828154811061054357634e487b7160e01b600052603260045260246000fd5b9060005260206000200160009054906101000a90046001600160a01b031690508084838151811061058457634e487b7160e01b600052603260045260246000fd5b6001600160a01b0392831660209182029290920181019190915282821660009081526002909152604090205484519116908490849081106105d557634e487b7160e01b600052603260045260246000fd5b6001600160a01b039092166020928302919091019091015250806105f881610790565b915050610516565b50939092509050565b80356001600160a01b038116811461062057600080fd5b919050565b600060208284031215610636578081fd5b61063f82610609565b9392505050565b60008060408385031215610658578081fd5b823567ffffffffffffffff8082111561066f578283fd5b818501915085601f830112610682578283fd5b8135602082821115610696576106966107b7565b8160051b604051601f19603f830116810181811086821117156106bb576106bb6107b7565b604052838152828101945085830182870184018b10156106d9578788fd5b8796505b84871015610702576106ee81610609565b8652600196909601959483019483016106dd565b5096506107129050878201610609565b9450505050509250929050565b6000815180845260208085019450808401835b838110156107575781516001600160a01b031687529582019590820190600101610732565b509495945050505050565b604081526000610775604083018561071f565b8281036020840152610787818561071f565b95945050505050565b60006000198214156107b057634e487b7160e01b81526011600452602481fd5b5060010190565b634e487b7160e01b600052604160045260246000fdfea264697066735822122007973c0b019bdbca3074e5baa75510a000c22774960763053505fe7cfef1bb8664736f6c63430008040033";
