/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { TestTileContract } from "./TestTileContract";

export class TestTileContractFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<TestTileContract> {
    return super.deploy(overrides || {}) as Promise<TestTileContract>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TestTileContract {
    return super.attach(address) as TestTileContract;
  }
  connect(signer: Signer): TestTileContractFactory {
    return super.connect(signer) as TestTileContractFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestTileContract {
    return new Contract(address, _abi, signerOrProvider) as TestTileContract;
  }
}

const _abi = [
  {
    inputs: [],
    name: "logger",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct Coords",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "logger_a",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "logger_b",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "logger_c",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "logger_d",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "inp",
        type: "string",
      },
    ],
    name: "test",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct Coords",
        name: "selfCoords",
        type: "tuple",
      },
    ],
    name: "testSelfCoords",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "inp",
        type: "uint256",
      },
    ],
    name: "test_a",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "inp",
        type: "bytes32",
      },
    ],
    name: "test_b",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "inp",
        type: "bytes",
      },
    ],
    name: "test_c",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "inp",
        type: "address",
      },
    ],
    name: "test_d",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct Coords",
        name: "coords",
        type: "tuple",
      },
    ],
    name: "tileABI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct Coords",
        name: "coords",
        type: "tuple",
      },
    ],
    name: "tileDescription",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct Coords",
        name: "coords",
        type: "tuple",
      },
    ],
    name: "tileEmoji",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct Coords",
        name: "coords",
        type: "tuple",
      },
    ],
    name: "tileName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60c0604052600560808190526468656c6c6f60d81b60a0908152620000289160009190620000a1565b50600560015569060f0626466686a6c6e760b31b600281905560408051808201909152600a80825260209091019182526200006691600391620000a1565b50600480546001600160a01b03191673f05b5f04b7a77ca549c0de06beaf257f40c66fdb1790553480156200009a57600080fd5b5062000184565b828054620000af9062000147565b90600052602060002090601f016020900481019282620000d357600085556200011e565b82601f10620000ee57805160ff19168380011785556200011e565b828001600101855582156200011e579182015b828111156200011e57825182559160200191906001019062000101565b506200012c92915062000130565b5090565b5b808211156200012c576000815560010162000131565b600181811c908216806200015c57607f821691505b602082108114156200017e57634e487b7160e01b600052602260045260246000fd5b50919050565b610d3980620001946000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80637264888311610097578063b431fe9711610066578063b431fe9714610215578063f24ccbfe14610228578063f6bc2b8a1461023e578063f9fbd5541461026b57600080fd5b806372648883146101ac5780637b64db2d146101dc578063986c2854146101ef578063b397abf21461020257600080fd5b8063565ef1e3116100d3578063565ef1e31461015c5780635b51a6c21461017c5780635f71a8b91461019157806370bceb38146101a457600080fd5b806322098712146100fa5780632b9b2efa146101185780632f9ca46a1461012a575b600080fd5b61010261027e565b60405161010f9190610a96565b60405180910390f35b6002545b60405190815260200161010f565b610102610138366004610962565b50604080518082019091526009815268546573742054696c6560b81b602082015290565b610164610310565b6040516001600160a01b03909116815260200161010f565b61018f61018a366004610904565b600255565b005b61010261019f366004610962565b610351565b61011c610372565b61018f6101ba3660046108d6565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b61018f6101ea36600461091c565b6103a1565b6101026101fd366004610962565b6103b8565b61018f610210366004610904565b600155565b610102610223366004610962565b6103fb565b610230610428565b60405161010f929190610b01565b61010261024c366004610962565b50604080518082019091526004815263f09f8c8360e01b602082015290565b61018f61027936600461091c565b6105a6565b60606003805461028d90610bc3565b80601f01602080910402602001604051908101604052809291908181526020018280546102b990610bc3565b80156103065780601f106102db57610100808354040283529160200191610306565b820191906000526020600020905b8154815290600101906020018083116102e957829003601f168201915b5050505050905090565b604080518082019091526002815261321d60f11b6020820152600454600091610341916001600160a01b03166105b9565b506004546001600160a01b031690565b60606040518060c0016040528060948152602001610c706094913992915050565b600061039a60405180604001604052806002815260200161309d60f11b8152506001546105fe565b5060015490565b80516103b49060039060208401906107c7565b5050565b60606103c78260000151610643565b6103d48360200151610643565b6040516020016103e5929190610a2f565b6040516020818303038152906040529050919050565b606061040a8260000151610643565b6104178360200151610643565b6040516020016103e59291906109dc565b6060610447604051806040016040528060008152602001600081525090565b6104f9604051806040016040528060068152602001653bb7b936321d60d11b8152506000805461047690610bc3565b80601f01602080910402602001604051908101604052809291908181526020018280546104a290610bc3565b80156104ef5780601f106104c4576101008083540402835291602001916104ef565b820191906000526020600020905b8154815290600101906020018083116104d257829003601f168201915b5050505050610765565b6000604051806040016040528060018152602001600281525081805461051e90610bc3565b80601f016020809104026020016040519081016040528092919081815260200182805461054a90610bc3565b80156105975780601f1061056c57610100808354040283529160200191610597565b820191906000526020600020905b81548152906001019060200180831161057a57829003601f168201915b50505050509150915091509091565b80516103b49060009060208401906107c7565b6103b482826040516024016105cf929190610aa9565b60408051601f198184030181529190526020810180516001600160e01b031663319af33360e01b1790526107a6565b6103b48282604051602401610614929190610b2e565b60408051601f198184030181529190526020810180516001600160e01b03166309710a9d60e41b1790526107a6565b6060816106675750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610691578061067b81610bfe565b915061068a9050600a83610b68565b915061066b565b60008167ffffffffffffffff8111156106ba57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156106e4576020820181803683370190505b5090505b841561075d576106f9600183610b7c565b9150610706600a86610c19565b610711906030610b50565b60f81b81838151811061073457634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350610756600a86610b68565b94506106e8565b949350505050565b6103b4828260405160240161077b929190610ad3565b60408051601f198184030181529190526020810180516001600160e01b0316634b5c427760e01b1790525b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b8280546107d390610bc3565b90600052602060002090601f0160209004810192826107f5576000855561083b565b82601f1061080e57805160ff191683800117855561083b565b8280016001018555821561083b579182015b8281111561083b578251825591602001919060010190610820565b5061084792915061084b565b5090565b5b80821115610847576000815560010161084c565b600067ffffffffffffffff8084111561087b5761087b610c59565b604051601f8501601f19908116603f011681019082821181831017156108a3576108a3610c59565b816040528093508581528686860111156108bc57600080fd5b858560208301376000602087830101525050509392505050565b6000602082840312156108e7578081fd5b81356001600160a01b03811681146108fd578182fd5b9392505050565b600060208284031215610915578081fd5b5035919050565b60006020828403121561092d578081fd5b813567ffffffffffffffff811115610943578182fd5b8201601f81018413610953578182fd5b61075d84823560208401610860565b600060408284031215610973578081fd5b6040516040810181811067ffffffffffffffff8211171561099657610996610c59565b604052823581526020928301359281019290925250919050565b600081518084526109c8816020860160208601610b93565b601f01601f19169290920160200192915050565b6a39b2b63321b7b7b932399d60a91b815260008351610a0281600b850160208801610b93565b600b60fa1b600b918401918201528351610a2381600c840160208801610b93565b01600c01949350505050565b7f74686973206973206120746573742074696c65206f6e20783a00000000000000815260008351610a67816019850160208801610b93565b62103c9d60e91b6019918401918201528351610a8a81601c840160208801610b93565b01601c01949350505050565b6020815260006108fd60208301846109b0565b604081526000610abc60408301856109b0565b905060018060a01b03831660208301529392505050565b604081526000610ae660408301856109b0565b8281036020840152610af881856109b0565b95945050505050565b606081526000610b1460608301856109b0565b905082516020830152602083015160408301529392505050565b604081526000610b4160408301856109b0565b90508260208301529392505050565b60008219821115610b6357610b63610c2d565b500190565b600082610b7757610b77610c43565b500490565b600082821015610b8e57610b8e610c2d565b500390565b60005b83811015610bae578181015183820152602001610b96565b83811115610bbd576000848401525b50505050565b600181811c90821680610bd757607f821691505b60208210811415610bf857634e487b7160e01b600052602260045260246000fd5b50919050565b6000600019821415610c1257610c12610c2d565b5060010190565b600082610c2857610c28610c43565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fdfe68747470733a2f2f676973742e67697468756275736572636f6e74656e742e636f6d2f6e616c696e626861726477616a2f65363361343138336539616235626338373566346466363636343336366636662f7261772f373665633733633261373539633830643737383664666661663737383063343831333964303739622f5465737454696c65436f6e74726163742e6a736f6ea2646970667358221220bdbd9f4f6c04bc32e0c9f865142b2d0daf85fedde6f2b506daae3d87718bdaeb64736f6c63430008040033";
